rowRanges(se)
library("Rsamtools")
filenames <- dir(".", pattern = "sorted.bam", full.names = T)
filenames
bamfiles <- BamFileList(filenames, yieldSize=2000000)
bamfiles
seqinfo(bamfiles[1])
library("GenomicFeatures")
gtffile <- dir(".", pattern = "gtf", full.names = T)
gtffile
txdb <-  makeTxDbFromGFF("https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/412/675/GCF_000412675.1_ASM41267v1/GCF_000412675.1_ASM41267v1_genomic.gff.gz", format="gff")
ebg <- exonsBy(txdb, by="gene")
ebg
library("GenomicAlignments")
library("BiocParallel")
register(MulticoreParam(2))
se <- summarizeOverlaps(features=ebg,
reads=bamfiles,
mode="Union",
singleEnd=FALSE,
ignore.strand=TRUE,
fragments=TRUE )
se
head( assay(se) )
dim(se)
nrow(se)
ncol(se)
rowRanges(se)
length(rowRanges(se))
rowRanges(se)[[1]]
str(metadata(rowRanges(se)))
colData(se)
colnames(se)
bamfiles
write.table(x = assay(se), filename="counts.txt", quote=FALSE)
count = assay(se)
library("Rsamtools")
filenames <- dir(".", pattern = "sorted.bam", full.names = T)
filenames
bamfiles <- BamFileList(filenames, yieldSize=2000000)
bamfiles
seqinfo(bamfiles[1])
library("GenomicFeatures")
gtffile <- dir(".", pattern = "gtf", full.names = T)
gtffile
txdb <-  makeTxDbFromGFF("https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/412/675/GCF_000412675.1_ASM41267v1/GCF_000412675.1_ASM41267v1_genomic.gff.gz", format="gff")
ebg <- exonsBy(txdb, by="gene")
ebg
library("GenomicAlignments")
library("BiocParallel")
register(MulticoreParam(2))
se <- summarizeOverlaps(features=ebg,
reads=bamfiles,
mode="Union",
singleEnd=FALSE,
ignore.strand=TRUE,
fragments=TRUE )
se
head( assay(se))
dim(se)
nrow(se)
ncol(se)
rowRanges(se)
length(rowRanges(se))
rowRanges(se)[[1]]
str(metadata(rowRanges(se)))
colData(se)
colnames(se)
bamfiles
count = assay(se)
knitr::opts_chunk$set(echo = TRUE)
library("Rsubread")
fc <- featureCounts(files=filenames,
annot.ext=gtffile,
isGTFAnnotationFile=TRUE,
isPairedEnd=TRUE)
colData(se) <- DataFrame(sampleTable)
library("Rsubread")
fc <- featureCounts(files=filenames,
annot.ext=gtffile,
isGTFAnnotationFile=TRUE,
isPairedEnd=TRUE)
colnames(fc$counts) <- sampleTable$Run
head(count)
count = assay(se)
write.table(x = assay(se), filename="counts.txt", quote=FALSE)
write.table(x = assay(se), file="counts.txt", quote=FALSE)
str(counts)
write.table(x=count, file="counts.txt", col.names=T,row.names=T, quote = F)
colnames(fc$counts) <- sampleTable$Run
count = assay(se)
write.table(x=count, file="counts.txt", col.names=T,row.names=T, quote = F)
write.table(x=counts, file="counts.txt", col.names=T,row.names=T, quote = F)
write.table(x=counts, file="counts.txt", col.names=T,row.names=T, quote = F)
write.table(x=count, file="counts.txt", col.names=T,row.names=T, quote = F)
